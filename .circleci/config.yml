# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/dmcclure/hello-server
    steps:
      - checkout
      - run:
          name: "Run tests"
          command: go test -v ./...
      - setup_remote_docker
      - run:
          name: "Install AWS CLI"
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login)
      - run:
          name: "Build Docker image"
          command: docker build -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/hello-server:$CIRCLE_SHA1 .
      - run:
          name: "Push Docker image to AWS ECR"
          command: docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/hello-server:$CIRCLE_SHA1

  deploy_to_development:
    docker:
      - image: circleci/aws? golang:1.9
    working_directory: /go/src/github.com/dmcclure/hello-server
    steps:
      - run:
          name: "Deploy to development"
          command: echo TBD

  deploy_to_staging:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/dmcclure/hello-server
    steps:
      - run:
          name: "Deploy to staging"
          command: echo TBD

  deploy_to_production:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/dmcclure/hello-server
    steps:
      - run:
          name: "Deploy to production"
          command: echo TBD

workflows:
  version: 2

  build_and_deploy:
    jobs:
      - build
      - deploy_to_development:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy_to_staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
           - deploy_to_staging
      - deploy_to_production:
          requires:
            - hold

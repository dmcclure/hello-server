# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run:
          name: "Run tests"
          command: go test -v ./...
      - persist_to_workspace:
          root: .
          paths: .
      - setup_remote_docker
      - run:
          name: "Install AWS CLI"
          command: |
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region us-east-1)
      - run:
          name: "Build Docker image"
          command: docker build -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/hello-server:$CIRCLE_SHA1 .
      - run:
          name: "Push Docker image to AWS ECR"
      #     command: docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/hello-server:$CIRCLE_SHA1
          command: echo Pretending to push Docker image to AWS ECR

  deploy_to_development:
    docker:
      - image: wilson208/circleci-awscli
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Install envsubst"
          command: sudo apt-get install gettext-base
      - run:
          name: "Deploy to development"
          environment:
            ENV_NAME: development
            AWS_REGION: us-east-1
            DB_DSN: $DATABASE_DSN
          command: |
            envsubst < "ecs-task-definition.json" > "ecs-task-development.json"
            echo ECS UPDATE TBD
            cat ecs-task-development.json

  deploy_to_staging:
    docker:
      - image: wilson208/circleci-awscli
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Install envsubst"
          command: sudo apt-get install gettext-base
      - run:
          name: "Deploy to staging"
          environment:
            ENV_NAME: staging
            AWS_REGION: us-east-1
            DB_DSN: $DATABASE_DSN
          command: |
            envsubst < "ecs-task-definition.json" > "ecs-task-staging.json"
            echo ECS UPDATE TBD
            cat ecs-task-staging.json

  deploy_to_production:
    docker:
      - image: wilson208/circleci-awscli
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Install envsubst"
          command: sudo apt-get install gettext-base
      - run:
          name: "Deploy to production"
          command: echo TBD

workflows:
  version: 2

  build_and_deploy:
    jobs:
      - build
      - deploy_to_development:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy_to_staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
           - deploy_to_staging
          filters:
            tags:
              only: /^v\d+.\d+.\d+$/
      - deploy_to_production:
          requires:
            - hold
